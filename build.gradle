plugins {
    id 'org.springframework.boot' version '2.4.13'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'idea'
    id 'jacoco'
    id "org.sonarqube" version "3.5.0.2730"
}

group 'ch.uzh.ifi.hasel'
version '1.0.0'

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
}

springBoot {
    mainClass.set('ch.uzh.ifi.hase.soprafs24.Application')
}

dependencies {
    implementation 'org.mapstruct:mapstruct:1.3.1.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'
    testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'

    implementation 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // Email Service
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '1.2.0.RELEASE'

    // Password Hashing
    implementation 'de.mkammerer:argon2-jvm:2.11'

    // PostgreSQL
    implementation 'org.postgresql:postgresql:42.7.0'
    implementation 'com.google.cloud.sql:postgres-socket-factory:1.11.1'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
}

bootJar {
    archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}

sonarqube {
    properties {
        property "sonar.projectKey", "sopra-fs24-group-17_server"
        property "sonar.organization", "sopra-fs24-group-17"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    maxParallelForks = 1
}

task createPropertiesFile {
    doLast {
        File secretPropsFile = file('./local.properties')
        if (secretPropsFile.exists()) {
            copy {
                from secretPropsFile
                into 'src/main/resources/'
                rename { String fileName ->
                    'application-local.properties'
                }
            }
        }
    }
}

bootRun {
    environment 'SPRING_PROFILES_ACTIVE', 'dev'
}

processResources.dependsOn(createPropertiesFile)

defaultTasks 'bootJar', 'build'
